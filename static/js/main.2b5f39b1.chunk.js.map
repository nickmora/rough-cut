{"version":3,"sources":["images/clyffstill.jpg","images/logos/bootstrap.svg","images/logos/css3.svg","images/logos/express.svg","images/logos/javascript.svg","images/logos/materialUI.svg","images/logos/react.svg","images/logos/redux.svg","images/logos/mongodb.svg","images/logos/node.svg","images/logos/mysql.svg","images/logos/html5.svg","images/todolist.png","images/pawstagram.png","images/jobscrybe.jpeg","images/nytScrape.jpeg","_components/Banner.js","_components/ProjectCard.js","projects.js","_components/Portfolio.js","_components/Bio.js","_components/Contact.js","_styles/mainStyle.js","_components/Footer.js","_styles/mainTheme.js","_components/TechStack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","Card","className","Grid","container","justify","Avatar","style","src","clyff","Typography","variant","gutterBottom","CardActions","item","xs","spacing","alignContent","IconButton","onClick","window","open","GitHub","LinkedIn","Mail","ProjectCard","props","CardContent","project","title","paragraph","description","sm","Paper","img","alt","altText","direction","align","techs","map","tech","alignItems","Button","fullWidth","color","git","deployed","projects","require","Portfolio","React","useState","defaultProjects","length","key","id","Bio","Contact","first_name","last_name","phone_number","body","email","inputText","setInputText","handleInput","e","target","name","value","onSubmit","preventDefault","emailjs","sendForm","process","then","result","console","log","text","error","TextField","placeholder","label","required","onChange","type","multiline","useStyles","makeStyles","theme","root","textAlign","padding","margin","maxWidth","Footer","backgroundColor","palette","secondary","dark","getContrastText","TechStack","height","classes","mainStyle","createMuiTheme","primary","blue","main","bootstrapIcon","css3Icon","html5Icon","javascriptIcon","reactIcon","reduxIcon","materialUIIcon","expressIcon","mongodbIcon","mysqlIcon","nodeIcon","App","CssBaseline","ThemeProvider","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b5f39b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clyffstill.628a53b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.67cb4bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3.0a9363e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/express.9240c272.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.61ed8b05.svg\";","module.exports = __webpack_public_path__ + \"static/media/materialUI.cd849ab9.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.e20af11e.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux.bcee418f.svg\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.80e39c1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/node.a745dcd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/mysql.f80a91ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5.676e8188.svg\";","module.exports = __webpack_public_path__ + \"static/media/todolist.eab8b4b0.png\";","module.exports = __webpack_public_path__ + \"static/media/pawstagram.a8e499db.png\";","module.exports = __webpack_public_path__ + \"static/media/jobscrybe.6828c3cd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/nytScrape.a56247da.jpeg\";","import React from 'react';\nimport { Avatar, Typography, Grid, IconButton, Card, CardActions } from \"@material-ui/core\";\nimport { GitHub, Mail, LinkedIn } from \"@material-ui/icons\";\nimport clyff from \"../images/clyffstill.jpg\";\n\nconst Banner = () => {\n    return (\n        <Card className = \"card\">\n            <Grid container justify = \"center\" >\n                <Avatar style = {{\"width\": \"350px\", \"height\": \"350px\", \"margin\" : \"25px\" }} src={clyff} />\n            </Grid>\n            <Typography variant={\"h3\"} gutterBottom>\n                Nick Morales\n            </Typography>\n            <Typography variant={\"h5\"} gutterBottom>\n                Full Stack Web Developer\n            </Typography>\n            <CardActions>\n                <Grid container justify = \"center\" >\n                <Grid item xs = {4} container spacing={4} alignContent=\"center\">\n                    <Grid item xs={4}>\n                        <IconButton onClick = {()=>window.open(\"https://github.com/nickmora\", \"_blank\")}>\n                            <GitHub />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <IconButton onClick = {()=>window.open(\"https://www.linkedin.com/in/nick-morales-970437173/\", \"_blank\")}>\n                            <LinkedIn />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <IconButton>\n                            <Mail />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n                </Grid>\n            </CardActions>\n        </Card>\n       \n    );\n}\n\nexport default Banner;","import React from 'react';\nimport { Card, CardContent, Typography, Grid, Paper, Button } from \"@material-ui/core\";\n\nconst ProjectCard = (props) => {\n    return (\n        <Card className=\"card\">\n            <CardContent>\n                <Typography\n                    variant=\"h3\"\n                >\n                    {props.project.title}\n                </Typography>\n                <Typography\n                    variant=\"subtitle2\"\n                    paragraph\n                >\n                    {props.project.description}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item sm={4}>\n                        <Paper className=\"card\">\n                            <img src={props.project.img} alt={props.project.altText} className=\"project-img\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item sm={8} container spacing={2} justify=\"space-between\" direction=\"column\">\n                        <Grid item>\n                            <Typography\n                                variant=\"h6\"\n                                align=\"center\"\n                                gutterBottom\n                            >\n                                Techs Used:\n                                    {props.project.techs.map(tech => {\n                                        return (\n                                            <Typography\n                                                align = \"left\"\n                                            >\n                                                {tech}\n                                            </Typography>\n                                        )\n                                    })}\n                            </Typography>\n                        </Grid>\n                        {/* \n                        ---DATE FORMAT---\n                        \n                        <Typography\n                            variant=\"body2\"\n                            align=\"right\"\n                            paragraph\n                        >\n                            {props.project.date}\n                        </Typography> */}\n                        <Grid item container spacing={2} direction=\"row\" alignItems = \"center\">\n                            <Grid item sm={6}\n                            >\n                                <Button\n                                    variant=\"contained\"\n                                    fullWidth\n                                    color=\"primary\"\n                                    onClick = {()=>window.open(props.project.git, \"_blank\")}\n                                >\n                                    GitHub Repo!\n                                </Button>\n                            </Grid>\n                            <Grid item sm={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    fullWidth\n                                    color=\"secondary\"\n                                    onClick = {()=>window.open(props.project.deployed, \"_blank\")}\n                                >\n                                    Deployed Site\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default ProjectCard;","const projects = [\n    {\n        \"title\" : \"To Do List\",\n        \"img\" : require(\"./images/todolist.png\"),\n        \"altText\": \"To Do List: A full stack to-do list application with collaborative comment capability\",\n        \"deployed\" : \"https://secure-hollows-14376.herokuapp.com/\",\n        \"git\" : \"https://github.com/nickmora/todolist\",\n        \"description\" : \"A full stack to-do list application with collaborative comment capability\",\n        \"id\" : 0,\n        \"techs\" : [\"React for our front-end library\", \"Express.js for setting up our server\", \"Node.js for running the back end\", \"MongoDB, Mongoose, & mLab for maintaining a relational database\"]\n    },{\n        \"title\" : \"Pawstagram\",\n        \"img\" : require(\"./images/pawstagram.png\"),\n        \"altText\": \"Pawstagram! It's social media for pets\",\n        \"deployed\" : \"https://pawstagram.herokuapp.com/\",\n        \"git\" : \"https://github.com/nickmora/Pawstagram\",\n        \"description\" : \"It's social media for your pets!\",\n        \"id\" : 1,\n        \"techs\" : [\"Material Design Bootstrap and Express Handlebars for front end styling\", \" Express.js for setting up our server\", \"Node.js for running the back end\", \"MySQL & Sequelize for maintaining a relational database\"]\n    },{\n        \"title\" : \"Jobscrybe\",\n        \"img\" : require(\"./images/jobscrybe.jpeg\"),\n        \"altText\": \"Jobscrybe: Test your resume before you apply\",\n        \"deployed\" : \"https://evening-brook-18257.herokuapp.com/\",\n        \"git\" : \"https://github.com/nickmora/jobscrybe\",\n        \"description\" : \"Test your resume before you apply\",\n        \"id\" : 2,\n        \"techs\" : [\"React for our front-end library\", \" Express.js for setting up our server\", \"Node.js for running the back end\", \"MongoDB, Mongoose, & mLab for maintaining a relational database\"]\n    },{\n        \"title\" : \"New York Times Scraper\",\n        \"img\" : require(\"./images/nytScrape.jpeg\"),\n        \"altText\": \"New York Times Scraper: Scrape articles from the New York Times and save them for later\",\n        \"deployed\" : \"https://nyt-scraper1231.herokuapp.com/\",\n        \"git\" : \"https://github.com/nickmora/NYT-Scraper\",\n        \"description\" : \"Scrape articles from the New York Times and save them for later\",\n        \"id\" : 3,\n        \"techs\" : [\"React for our front-end library\", \" Express.js for setting up our server\", \"Node.js for running the back end\", \"MongoDB, Mongoose, & mLab for maintaining a relational database\"]\n    }\n]\n\nexport default projects","import React from 'react';\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport ProjectCard from \"./ProjectCard\";\nimport defaultProjects from \"../projects.js\";\n\nconst Portfolio = () => {\n    const [projects] = React.useState(defaultProjects);\n    return (\n        <Paper className=\"card\">\n            <Typography\n                variant=\"h2\"\n            >\n                Portfolio\n            </Typography>\n            <Grid\n                container\n                spacing={4}\n            >\n                {projects.length ?\n                    projects.map(project => {\n                        return (\n                            <Grid\n                                item\n                                sm={12}\n                                key={project.id}\n                            >\n                                <ProjectCard project={project} />\n                            </Grid>\n                        )\n                    })\n                    :\n                    <Typography>\n                        Something went wrong\n                    </Typography>\n                }\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Portfolio;","import React from 'react';\nimport { Typography, Paper } from \"@material-ui/core\";\n\nconst Bio = () => {\n    return (\n        <div>\n            <Paper className = \"card\">\n            <Typography\n                variant=\"h2\"\n                gutterBottom\n            >\n                About Me\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                align = \"justify\"\n                paragraph\n            >\n                My name is Nick.  I grew up in Seattle.  I went to school in Colorado where I studied art.  I now live in Oakland where I am supporting myself through freelance graphic design and web development.  I am also a TA for the Full Stack Web Development course at the UC Berkeley Extension campus.  I am currently looking for employment as a full stack web developer.  I like to help other people out.  I’m really passionate about math, language, transportation, design, and art.  These things have lead me to learn how to code because I recognize that computers are integral tools in helping us tie all of these concepts together and hopefully better if not save the world.  Please contact me below for employment inquiries, collaboration opportunities, or freelance contracts\n            </Typography>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Bio;","import React from 'react';\nimport { Typography, Paper, TextField, Button, Grid } from \"@material-ui/core\";\nimport emailjs from \"emailjs-com\";\n\nconst Contact = () => {\n    const [inputText, setInputText] = React.useState({first_name:\"\",last_name:\"\",phone_number:\"\",body:\"\", email: \"\"});\n    const handleInput = e => {\n        setInputText({...inputText, [e.target.name]:e.target.value})\n    }\n    const sendEmail = e => {\n        e.preventDefault()\n        \n        // if(!inputText.first_name || !inputText.last_name || !inputText.body || !inputText.email){\n        //     return alert(\"Make a modal to show people that they need to fill out other fields\")\n        // }\n\n        emailjs.sendForm(\"gmail\", \"template_uASDyZfg_clone\", e.target, process.env.REACT_APP_EMAILJS_USER_ID)\n            .then(result => console.log(result.text), error => console.log(error.text))\n\n    }\n    return (\n        <div>\n            <Paper className=\"card\">\n                <Typography\n                    variant=\"h2\"\n                    gutterBottom\n                >\n                    Get in Touch\n                    </Typography>\n                <form onSubmit={sendEmail}>\n                    <Grid container spacing={3}>\n                        <Grid item xs = {6}>\n                            <TextField\n                                id=\"first_name\"\n                                placeholder=\"First Name\"\n                                label=\"First Name\"\n                                fullWidth\n                                name=\"first_name\"\n                                variant=\"outlined\"\n                                required\n                                value = {inputText.first_name}\n                                onChange = {handleInput}\n                            />\n                        </Grid>\n                        <Grid item xs = {6}>\n                            <TextField\n                                id=\"last_name\"\n                                placeholder=\"Last Name\"\n                                label=\"Last Name\"\n                                fullWidth\n                                name=\"last_name\"\n                                variant=\"outlined\"\n                                required\n                                value = {inputText.last_name}\n                                onChange = {handleInput}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                label=\"Email\"\n                                fullWidth\n                                type=\"email\"\n                                name=\"email\"\n                                variant=\"outlined\"\n                                required\n                                value = {inputText.email}\n                                onChange = {handleInput}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"phone_number\"\n                                placeholder=\"Phone Number\"\n                                label=\"Phone Number\"\n                                fullWidth\n                                type=\"tel\"\n                                name=\"phone_number\"\n                                variant=\"outlined\"\n                                value = {inputText.phone_number}\n                                onChange = {handleInput}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"body\"\n                                placeholder=\"Message Body\"\n                                label=\"Message Body\"\n                                multiline\n                                fullWidth\n                                name=\"body\"\n                                variant=\"outlined\"\n                                required\n                                value = {inputText.body}\n                                onChange = {handleInput}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Contact;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textAlign: \"center\",\n        \"& .card\": {\n            padding: theme.spacing(3),\n            margin: theme.spacing(1),\n        },\n        \"& .project-img\": {\n            maxWidth: \"100%\",\n        },\n    },\n    Footer: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.getContrastText(theme.palette.secondary.dark)\n    },\n    TechStack:{\n        \"& img\":{\n            height: \"50px\",\n            maxWidth: 100,\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport default useStyles","import React from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport mainStyle from \"../_styles/mainStyle\";\n// import {useTheme} from \"@material-ui/core/styles\";\n\n\nconst Footer = () => {\n    // const theme = useTheme();\n    const classes = mainStyle();\n    return (\n        console.log(classes),\n        <footer className = {classes.Footer}>\n            <Typography\n                variant = \"body2\"\n            >\n                Copyright &copy; 2020 Nick Morales <br /> All Rights Reserved\n            </Typography>\n        </footer>\n    );\n}\n\nexport default Footer;","import {createMuiTheme} from \"@material-ui/core/styles\";\nimport {lightBlue, blue }from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette:{\n        primary: blue,\n        secondary: {main:\"#0000FF\"},\n        // background: {paper: \"#00FF00\", default: \"#ff0000\"}\n    },\n})\n\nexport default theme","import React from \"react\"\nimport bootstrapIcon from \"../images/logos/bootstrap.svg\"\nimport css3Icon from \"../images/logos/css3.svg\"\nimport expressIcon from \"../images/logos/express.svg\"\nimport javascriptIcon from \"../images/logos/javascript.svg\"\nimport materialUIIcon from \"../images/logos/materialUI.svg\"\nimport reactIcon from \"../images/logos/react.svg\"\nimport reduxIcon from \"../images/logos/redux.svg\"\nimport mongodbIcon from \"../images/logos/mongodb.svg\"\nimport nodeIcon from \"../images/logos/node.svg\"\nimport mysqlIcon from \"../images/logos/mysql.svg\"\nimport html5Icon from \"../images/logos/html5.svg\"\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport mainStyle from \"../_styles/mainStyle\"\n\nconst TechStack = () => {\n    const classes = mainStyle();\n    return (\n        <div className={classes.TechStack}>\n            <Card className=\"card\">\n                <CardContent>\n                    <Typography\n                        variant=\"h2\"\n                        align=\"center\"\n                        gutterBottom\n                    >\n                        Tech Stack\n                        </Typography>\n                    <Grid container justify=\"center\">\n\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                gutterBottom\n                            >\n                                Front End\n                            </Typography>\n                            <img src={bootstrapIcon} alt=\"bootstrap\" />\n                            <img src={css3Icon} alt=\"css\" />\n                            <img src={html5Icon} alt=\"html\" />\n                            <img src={javascriptIcon} alt=\"javascript\" />\n                            <img src={reactIcon} alt=\"react\" />\n                            <img src={reduxIcon} alt=\"redux\" />\n                            <img src={materialUIIcon} alt=\"materialUI\" />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                gutterBottom\n                            >\n                                Back End\n                            </Typography>\n                            <img src={expressIcon} alt=\"express\" />\n                            <img src={mongodbIcon} alt=\"mongo\" />\n                            <img src={mysqlIcon} alt=\"mysql\" />\n                            <img src={nodeIcon} alt=\"node\" />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default TechStack","import React from 'react';\nimport Banner from './_components/Banner';\nimport { Container, ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport Portfolio from './_components/Portfolio';\nimport Bio from './_components/Bio';\nimport Contact from \"./_components/Contact\";\nimport Footer from './_components/Footer';\nimport theme from \"./_styles/mainTheme\";\nimport mainStyle from \"./_styles/mainStyle\";\nimport TechStack from \"./_components/TechStack\";\n\nfunction App() {\n  const classes = mainStyle(theme);\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <Container>\n            <Banner />\n            <Bio />\n            <TechStack />\n            <Portfolio />\n            <Contact />\n          </Container>\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}